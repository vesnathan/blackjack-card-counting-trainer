Resources:
  cognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UsernameAttributes:
        - email
      UserPoolName: "blackjackUserPool"



  cognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: Web
      UserPoolId: !Ref cognitoUserPool

  cognitoAdminGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      Description: "Admin User Group"
      GroupName: "Admin"
      Precedence: 0
      RoleArn: !GetAtt cognitoAdminIAMRole.Arn
      UserPoolId: !Ref cognitoUserPool

  cognitoAdminIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated:
                - "cognito-identity.amazonaws.com"
            Action:
              - "sts:AssumeRoleWithWebIdentity"
      Description: "Admin Role"
      Policies:
        - PolicyName: "blackjack-admin-group-policy"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "dynamodb:*"
                Resource: 
                  - !GetAtt gamesTable.Arn
      RoleName: "blackjack-admin-role"

  cognitoCustomerGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      Description: "Customer User Group"
      GroupName: "Customer"
      Precedence: 1
      RoleArn: !GetAtt cognitoUserIAMRole.Arn
      UserPoolId: !Ref cognitoUserPool

  cognitoUserIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "blackjack-customer-role"
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated:
                - "cognito-identity.amazonaws.com"
            Action:
              - "sts:AssumeRoleWithWebIdentity"
      Description: "User Role"
      Policies:
        - PolicyName: "blackjack-customer-group-policy"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "dynamodb:GetItem"
                  - "dynamodb:PutItem"
                Resource:
                  - !GetAtt gamesTable.Arn
# ------------------------------------------------------------------
  cognitoIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: true
      CognitoIdentityProviders:
        - ClientId: !Ref cognitoUserPoolClient
          ProviderName: !GetAtt cognitoUserPool.ProviderName
      IdentityPoolName: blackjackIdentityPool   

  cognitoIdentityPoolRoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: !Ref cognitoIdentityPool
      Roles:
        unauthenticated: !GetAtt cognitoUnauthIAMRole.Arn  

  cognitoUnauthIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "blackjack-unauth-role"
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated:
                - "cognito-identity.amazonaws.com"
            Action:
              - "sts:AssumeRoleWithWebIdentity"
      Description: "Unauth user Role"
      Policies:
        - PolicyName: "blackjack-unauth-user-policy"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "appsync:GraphQL"
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:aws:appsync:${self:provider.region}:"
                      - Ref : AWS::AccountId # ${aws:accountId}
                      - ":apis/"
                      - Fn::GetAtt:
                        - GraphQlApi
                        - ApiId
                      - "/*"                    
                #Resource:
                  #- "arn:aws:appsync:ap-southeast-2:233071820248:apis/jwvvihaxrng5pgfzypppmifiai/*"
                  # - !GetAtt custom.appSync.Arn
                  # Resource: arn:aws:s3:::${self:custom.bucketName}/*
                  #- "arn:aws:appsync:ap-southeast-2:233071820248:apis/jwvvihaxrng5pgfzypppmifiai/*"
                  